{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["file:///home/lukas/Desktop/portfolio/app/ui/Pagination.tsx"],"sourcesContent":["\"use client\";\nimport {\n  ButtonGroup,\n  IconButton,\n  Pagination,\n  Stack,\n  Box,\n  Link,\n  Card,\n  Image,\n  Badge,\n} from \"@chakra-ui/react\";\nimport { useState } from \"react\";\nimport { HiChevronLeft, HiChevronRight } from \"react-icons/hi\";\n\nimport { FaRegCalendar } from \"react-icons/fa\";\nimport { post } from \"../utils/mdxFiles\";\n\nexport default function PaginationUI({ posts }: { posts: post[] }) {\n  const pageSize = 4;\n  const count = posts.length;\n  const [page, setPage] = useState(1);\n\n  const startRange = (page - 1) * pageSize;\n  const endRange = startRange + pageSize;\n\n  const visibleItems = posts.slice(startRange, endRange);\n\n  return (\n    <>\n      <Stack\n        paddingY={{ base: \"2\" }}\n        maxWidth=\"lvw\"\n        width=\"lvw\"\n        overflowX=\"scroll\"\n        paddingX={10}\n      >\n        <Stack gap={4} alignContent=\"start\" minHeight=\"52rem\">\n          {visibleItems.map((item: post) => (\n            <Card.Root\n              margin={0}\n              zIndex={2} // si es negativo no hace hover\n              key={item.slug}\n              flexDirection=\"row\"\n              transition=\"all 0.2s ease-in-out\" // Aplica la transiciÃ³n a todas las propiedades que cambien\n              _hover={{\n                bg: \"gray.900\", // Cambia el color de fondo\n                transform: \"scale(1.02)\", // Escala el componente\n                boxShadow: \"lg\", // Agrega una sombra\n              }}\n              minWidth=\"32rem\"\n              width=\"full\"\n              minHeight=\"11rem\"\n              maxHeight=\"12rem\"\n              overflow=\"clip\"\n              textWrap=\"pretty\"\n            >\n              <Link\n                variant=\"plain\"\n                textDecoration=\"none\"\n                href={`/Blog/${item.slug}`}\n                width=\"full\"\n                maxHeight=\"11rem\"\n                overflowX=\"clip\"\n                margin=\"2\"\n              >\n                <Image\n                  h=\"full\"\n                  width=\"32rem\"\n                  minWidth=\"12rem\"\n                  objectFit=\"fill\"\n                  src={`${item.matter.image.path}`}\n                  alt=\"Caffe Latte\"\n                  borderRadius=\"md\"\n                />\n                <Box width=\"60%\" minWidth=\"60%\">\n                  <Card.Body minHeight=\"100%\">\n                    <Card.Title textWrap=\"wrap\">{item.matter.title}</Card.Title>\n                    <Card.Description lineClamp=\"3\">\n                      {item.matter.description}\n                    </Card.Description>\n                  </Card.Body>\n                  <Card.Footer maxHeight=\"100%\">\n                    <Box display=\"flex\" gap=\"2\" minHeight=\"full\">\n                      <Badge>\n                        <FaRegCalendar />\n                        {item.matter.date.split(\" \")[0].replaceAll(\"-\", \"/\")}\n                      </Badge>\n\n                      {item.matter.categories.map((category: string) => (\n                        <Badge key={category}>{category}</Badge>\n                      ))}\n                    </Box>\n                  </Card.Footer>\n                </Box>\n              </Link>\n            </Card.Root>\n          ))}\n        </Stack>\n        <Box>\n          <Pagination.Root\n            count={count}\n            pageSize={pageSize}\n            page={page}\n            onPageChange={(e) => setPage(e.page)}\n            display=\"flex\"\n            justifyContent=\"center\"\n          >\n            <ButtonGroup variant=\"ghost\" size=\"sm\">\n              <Pagination.PrevTrigger asChild>\n                <IconButton>\n                  <HiChevronLeft />\n                </IconButton>\n              </Pagination.PrevTrigger>\n\n              <Pagination.Items\n                render={(page) => (\n                  <IconButton variant={{ base: \"outline\", _selected: \"solid\" }}>\n                    {page.value}\n                  </IconButton>\n                )}\n              />\n\n              <Pagination.NextTrigger asChild>\n                <IconButton>\n                  <HiChevronRight />\n                </IconButton>\n              </Pagination.NextTrigger>\n            </ButtonGroup>\n          </Pagination.Root>\n        </Box>\n      </Stack>\n    </>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}