{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/lukas/Desktop/portfolio/components/ui/color-mode.tsx"],"sourcesContent":["\"use client\";\n\nimport type { IconButtonProps, SpanProps } from \"@chakra-ui/react\";\nimport { ClientOnly, IconButton, Skeleton, Span } from \"@chakra-ui/react\";\nimport { ThemeProvider, useTheme } from \"next-themes\";\nimport type { ThemeProviderProps } from \"next-themes\";\nimport * as React from \"react\";\nimport { LuMoon, LuSun } from \"react-icons/lu\";\n\n// export interface ColorModeProviderProps extends ThemeProviderProps {}\n\nexport function ColorModeProvider(props: ThemeProviderProps) {\n  return (\n    <ThemeProvider attribute=\"class\" disableTransitionOnChange {...props} />\n  );\n}\n\nexport type ColorMode = \"light\" | \"dark\";\n\nexport interface UseColorModeReturn {\n  colorMode: ColorMode;\n  setColorMode: (colorMode: ColorMode) => void;\n  toggleColorMode: () => void;\n}\n\nexport function useColorMode(): UseColorModeReturn {\n  const { resolvedTheme, setTheme, forcedTheme } = useTheme();\n  const colorMode = forcedTheme || resolvedTheme;\n  const toggleColorMode = () => {\n    setTheme(resolvedTheme === \"dark\" ? \"light\" : \"dark\");\n  };\n  return {\n    colorMode: colorMode as ColorMode,\n    setColorMode: setTheme,\n    toggleColorMode,\n  };\n}\n\nexport function useColorModeValue<T>(light: T, dark: T) {\n  const { colorMode } = useColorMode();\n  return colorMode === \"dark\" ? dark : light;\n}\n\nexport function ColorModeIcon() {\n  const { colorMode } = useColorMode();\n  return colorMode === \"dark\" ? <LuMoon /> : <LuSun />;\n}\n\n//interface ColorModeButtonProps extends Omit<IconButtonProps, \"aria-label\"> {}\n\nexport const ColorModeButton = React.forwardRef<\n  HTMLButtonElement,\n  Omit<IconButtonProps, \"aria-label\">\n>(function ColorModeButton(props, ref) {\n  const { toggleColorMode } = useColorMode();\n  return (\n    <ClientOnly fallback={<Skeleton boxSize=\"8\" />}>\n      <IconButton\n        onClick={toggleColorMode}\n        variant=\"ghost\"\n        aria-label=\"Toggle color mode\"\n        size=\"sm\"\n        ref={ref}\n        {...props}\n        css={{\n          _icon: {\n            width: \"5\",\n            height: \"5\",\n          },\n        }}\n      >\n        <ColorModeIcon />\n      </IconButton>\n    </ClientOnly>\n  );\n});\n\nexport const LightMode = React.forwardRef<HTMLSpanElement, SpanProps>(\n  function LightMode(props, ref) {\n    return (\n      <Span\n        color=\"fg\"\n        display=\"contents\"\n        className=\"chakra-theme light\"\n        colorPalette=\"gray\"\n        colorScheme=\"light\"\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\n\nexport const DarkMode = React.forwardRef<HTMLSpanElement, SpanProps>(\n  function DarkMode(props, ref) {\n    return (\n      <Span\n        color=\"fg\"\n        display=\"contents\"\n        className=\"chakra-theme dark\"\n        colorPalette=\"gray\"\n        colorScheme=\"dark\"\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\n"],"names":[],"mappings":";;;;;;;;;;AAGA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;;;AAPA;;;;;AAWO,SAAS,kBAAkB,KAAyB;IACzD,qBACE,6LAAC,mJAAA,CAAA,gBAAa;QAAC,WAAU;QAAQ,yBAAyB;QAAE,GAAG,KAAK;;;;;;AAExE;KAJgB;AAcT,SAAS;;IACd,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,mJAAA,CAAA,WAAQ,AAAD;IACxD,MAAM,YAAY,eAAe;IACjC,MAAM,kBAAkB;QACtB,SAAS,kBAAkB,SAAS,UAAU;IAChD;IACA,OAAO;QACL,WAAW;QACX,cAAc;QACd;IACF;AACF;GAXgB;;QACmC,mJAAA,CAAA,WAAQ;;;AAYpD,SAAS,kBAAqB,KAAQ,EAAE,IAAO;;IACpD,MAAM,EAAE,SAAS,EAAE,GAAG;IACtB,OAAO,cAAc,SAAS,OAAO;AACvC;IAHgB;;QACQ;;;AAIjB,SAAS;;IACd,MAAM,EAAE,SAAS,EAAE,GAAG;IACtB,OAAO,cAAc,uBAAS,6LAAC,iJAAA,CAAA,SAAM;;;;6BAAM,6LAAC,iJAAA,CAAA,QAAK;;;;;AACnD;IAHgB;;QACQ;;;MADR;AAOT,MAAM,gCAAkB,IAAA,6JAAA,CAAA,aAAgB,WAG7C,SAAS,gBAAgB,KAAK,EAAE,GAAG;;IACnC,MAAM,EAAE,eAAe,EAAE,GAAG;IAC5B,qBACE,6LAAC,2MAAA,CAAA,aAAU;QAAC,wBAAU,6LAAC,+LAAA,CAAA,WAAQ;YAAC,SAAQ;;;;;;kBACtC,cAAA,6LAAC,mMAAA,CAAA,aAAU;YACT,SAAS;YACT,SAAQ;YACR,cAAW;YACX,MAAK;YACL,KAAK;YACJ,GAAG,KAAK;YACT,KAAK;gBACH,OAAO;oBACL,OAAO;oBACP,QAAQ;gBACV;YACF;sBAEA,cAAA,6LAAC;;;;;;;;;;;;;;;AAIT;;QArB8B;;;;QAAA;;;;AAuBvB,MAAM,0BAAY,6JAAA,CAAA,aAAgB,OACvC,SAAS,UAAU,KAAK,EAAE,GAAG;IAC3B,qBACE,6LAAC,sLAAA,CAAA,OAAI;QACH,OAAM;QACN,SAAQ;QACR,WAAU;QACV,cAAa;QACb,aAAY;QACZ,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAGK,MAAM,yBAAW,6JAAA,CAAA,aAAgB,OACtC,SAAS,SAAS,KAAK,EAAE,GAAG;IAC1B,qBACE,6LAAC,sLAAA,CAAA,OAAI;QACH,OAAM;QACN,SAAQ;QACR,WAAU;QACV,cAAa;QACb,aAAY;QACZ,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf","debugId":null}},
    {"offset": {"line": 189, "column": 0}, "map": {"version":3,"sources":["file:///home/lukas/Desktop/portfolio/components/ui/provider.tsx"],"sourcesContent":["\"use client\";\n\nimport { ChakraProvider, defaultSystem } from \"@chakra-ui/react\";\nimport {\n  ColorModeProvider,\n  //type ColorModeProviderProps,\n} from \"./color-mode\";\nimport type { ThemeProviderProps } from \"next-themes\";\n\nexport function Provider(props: ThemeProviderProps) {\n  return (\n    <ChakraProvider value={defaultSystem}>\n      <ColorModeProvider {...props} />\n    </ChakraProvider>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AAAA;AACA;AAHA;;;;AASO,SAAS,SAAS,KAAyB;IAChD,qBACE,6LAAC,yLAAA,CAAA,iBAAc;QAAC,OAAO,mKAAA,CAAA,gBAAa;kBAClC,cAAA,6LAAC,qIAAA,CAAA,oBAAiB;YAAE,GAAG,KAAK;;;;;;;;;;;AAGlC;KANgB","debugId":null}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///home/lukas/Desktop/portfolio/app/ui/NavBar.tsx"],"sourcesContent":["\"use client\"\nimport { VStack, Box, Tabs } from \"@chakra-ui/react\";\nimport Link from \"next/link\";\nimport { useEffect, useState } from \"react\"\nimport { usePathname } from \"next/navigation\";\nexport default function NavBar() {\n  const pathname: string = usePathname()\n\n  const [value, setValue] = useState<string | null>('')\n  useEffect(() => {\n    setValue(pathname.split('/')[1]);\n\n  }, [pathname])\n  // console.log(pathname.split('/')[1])\n  return (\n    <>\n      <Box\n        position={{\n          base: \"sticky\",\n          sm: \"sticky\",\n          md: \"sticky\",\n          lg: \"sticky\",\n          xl: \"sticky\",\n        }}\n        top={{ base: 0, sm: 0, md: 0, lg: 0, xl: 0 }}\n        zIndex={100}\n        alignSelf=\"start\"\n      >\n        <VStack paddingTop={4} width=\"100%\" background=\"#09090b\">\n          <Box width=\"full\">\n            <Tabs.Root value={value} onValueChange={(e) => setValue(e.value)}>\n              <Tabs.List>\n\n                <Link href=\"/AboutMe\">\n                  <Box\n                    transition=\"all 0.2s ease-in-out\" // Aplica la transición a todas las propiedades que cambien\n                    _hover={{\n                      bg: \"gray.900\", // Cambia el color de fondo\n                      transform: \"scale(1.02)\", // Escala el componente\n                      boxShadow: \"lg\", // Agrega una sombra\n                    }}\n                    borderTopRadius='md'\n                  >\n                    <Tabs.Trigger value=\"AboutMe\">Sobre Mí</Tabs.Trigger>\n                  </Box>\n\n                </Link>\n                <Link href=\"/Blog\">\n                  <Box\n                    transition=\"all 0.2s ease-in-out\" // Aplica la transición a todas las propiedades que cambien\n                    _hover={{\n                      bg: \"gray.900\", // Cambia el color de fondo\n                      transform: \"scale(1.02)\", // Escala el componente\n                      boxShadow: \"lg\", // Agrega una sombra\n                    }}\n                    borderTopRadius='md'>\n                    <Tabs.Trigger value=\"Blog\">Blog</Tabs.Trigger>\n                  </Box>\n                </Link>\n              </Tabs.List>\n              {/* ... */}\n            </Tabs.Root>\n          </Box>\n        </VStack>\n      </Box>\n    </>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AAAA;AAAA;AACA;AACA;AACA;;;AAJA;;;;;AAKe,SAAS;;IACtB,MAAM,WAAmB,CAAA,GAAA,qIAAA,CAAA,cAAW,AAAD;IAEnC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IAClD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;4BAAE;YACR,SAAS,SAAS,KAAK,CAAC,IAAI,CAAC,EAAE;QAEjC;2BAAG;QAAC;KAAS;IACb,sCAAsC;IACtC,qBACE;kBACE,cAAA,6LAAC,qLAAA,CAAA,MAAG;YACF,UAAU;gBACR,MAAM;gBACN,IAAI;gBACJ,IAAI;gBACJ,IAAI;gBACJ,IAAI;YACN;YACA,KAAK;gBAAE,MAAM;gBAAG,IAAI;gBAAG,IAAI;gBAAG,IAAI;gBAAG,IAAI;YAAE;YAC3C,QAAQ;YACR,WAAU;sBAEV,cAAA,6LAAC,8LAAA,CAAA,SAAM;gBAAC,YAAY;gBAAG,OAAM;gBAAO,YAAW;0BAC7C,cAAA,6LAAC,qLAAA,CAAA,MAAG;oBAAC,OAAM;8BACT,cAAA,6LAAC,4NAAA,CAAA,OAAI,CAAC,IAAI;wBAAC,OAAO;wBAAO,eAAe,CAAC,IAAM,SAAS,EAAE,KAAK;kCAC7D,cAAA,6LAAC,4NAAA,CAAA,OAAI,CAAC,IAAI;;8CAER,6LAAC,+JAAA,CAAA,UAAI;oCAAC,MAAK;8CACT,cAAA,6LAAC,qLAAA,CAAA,MAAG;wCACF,YAAW;wCACX,QAAQ;4CACN,IAAI;4CACJ,WAAW;4CACX,WAAW;wCACb;wCACA,iBAAgB;kDAEhB,cAAA,6LAAC,4NAAA,CAAA,OAAI,CAAC,OAAO;4CAAC,OAAM;sDAAU;;;;;;;;;;;;;;;;8CAIlC,6LAAC,+JAAA,CAAA,UAAI;oCAAC,MAAK;8CACT,cAAA,6LAAC,qLAAA,CAAA,MAAG;wCACF,YAAW;wCACX,QAAQ;4CACN,IAAI;4CACJ,WAAW;4CACX,WAAW;wCACb;wCACA,iBAAgB;kDAChB,cAAA,6LAAC,4NAAA,CAAA,OAAI,CAAC,OAAO;4CAAC,OAAM;sDAAO;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAW/C;GA9DwB;;QACG,qIAAA,CAAA,cAAW;;;KADd","debugId":null}}]
}