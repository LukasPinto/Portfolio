{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/lukas/Desktop/portfolio/app/hooks/useActiveSection.tsx"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\n\nconst defaultOptions = {\n  root: null, // El viewport del documento es el elemento ra√≠z que se observa\n  rootMargin: \"0px 0px -20% 0px\",\n  threshold: 0, // El callback se ejecuta tan pronto como el elemento entra/sale del rootMargin.\n};\n\n//este hook se encarga de quedar observando la pantalla/viewport para detectar cuando entra o sale un titulo\nfunction useActiveSection(\n  sectionIds: string[],\n\n  options?: IntersectionObserverInit\n): string | null {\n  const [activeId, setActiveId] = useState<string | null>(\"\");\n  const observerRef = useRef<IntersectionObserver | null>(null);\n\n  useEffect(() => {\n    if (!sectionIds || sectionIds.length === 0) {\n      if (observerRef.current) {\n        observerRef.current.disconnect();\n      }\n\n      return;\n    }\n    if (observerRef.current) {\n      observerRef.current.disconnect();\n    }\n\n    const observerOptions: IntersectionObserverInit = {\n      ...defaultOptions,\n      ...options,\n    };\n\n    const callback: IntersectionObserverCallback = (entries) => {\n      const visibleEntries = entries.filter((entry) => entry.isIntersecting);\n\n      if (visibleEntries.length > 0) {\n        const sortedVisibleEntries = visibleEntries.sort((a, b) => {\n          return a.boundingClientRect.top - b.boundingClientRect.top;\n        });\n        setActiveId(sortedVisibleEntries[0].target.id);\n      }\n    };\n\n    observerRef.current = new IntersectionObserver(callback, observerOptions);\n\n    sectionIds.forEach((id) => {\n      const element = document.getElementById(id);\n      if (element) {\n        if (observerRef.current) {\n          observerRef.current.observe(element);\n        }\n      }\n    });\n\n    return () => {\n      if (observerRef.current) {\n        observerRef.current.disconnect();\n      }\n    };\n  }, [sectionIds, options]);\n\n  return activeId;\n}\n\nexport default useActiveSection;\n"],"names":[],"mappings":";;;AAAA;;;AAEA,MAAM,iBAAiB;IACrB,MAAM;IACN,YAAY;IACZ,WAAW;AACb;AAEA,4GAA4G;AAC5G,SAAS,iBACP,UAAoB,EAEpB,OAAkC;;IAElC,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAiB;IACxD,MAAM,cAAc,CAAA,GAAA,6JAAA,CAAA,SAAM,AAAD,EAA+B;IAExD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;sCAAE;YACR,IAAI,CAAC,cAAc,WAAW,MAAM,KAAK,GAAG;gBAC1C,IAAI,YAAY,OAAO,EAAE;oBACvB,YAAY,OAAO,CAAC,UAAU;gBAChC;gBAEA;YACF;YACA,IAAI,YAAY,OAAO,EAAE;gBACvB,YAAY,OAAO,CAAC,UAAU;YAChC;YAEA,MAAM,kBAA4C;gBAChD,GAAG,cAAc;gBACjB,GAAG,OAAO;YACZ;YAEA,MAAM;uDAAyC,CAAC;oBAC9C,MAAM,iBAAiB,QAAQ,MAAM;8EAAC,CAAC,QAAU,MAAM,cAAc;;oBAErE,IAAI,eAAe,MAAM,GAAG,GAAG;wBAC7B,MAAM,uBAAuB,eAAe,IAAI;wFAAC,CAAC,GAAG;gCACnD,OAAO,EAAE,kBAAkB,CAAC,GAAG,GAAG,EAAE,kBAAkB,CAAC,GAAG;4BAC5D;;wBACA,YAAY,oBAAoB,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE;oBAC/C;gBACF;;YAEA,YAAY,OAAO,GAAG,IAAI,qBAAqB,UAAU;YAEzD,WAAW,OAAO;8CAAC,CAAC;oBAClB,MAAM,UAAU,SAAS,cAAc,CAAC;oBACxC,IAAI,SAAS;wBACX,IAAI,YAAY,OAAO,EAAE;4BACvB,YAAY,OAAO,CAAC,OAAO,CAAC;wBAC9B;oBACF;gBACF;;YAEA;8CAAO;oBACL,IAAI,YAAY,OAAO,EAAE;wBACvB,YAAY,OAAO,CAAC,UAAU;oBAChC;gBACF;;QACF;qCAAG;QAAC;QAAY;KAAQ;IAExB,OAAO;AACT;GAvDS;uCAyDM","debugId":null}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file:///home/lukas/Desktop/portfolio/app/ui/Toc.tsx"],"sourcesContent":["\"use client\";\nimport { TreeView, createTreeCollection, Box } from \"@chakra-ui/react\";\nimport { useMemo, useState } from \"react\";\nimport useActiveSection from \"@/app/hooks/useActiveSection\";\nimport { FaRegCircle, FaCircle } from \"react-icons/fa\";\nimport { Node } from \"@/app/utils/mdxFiles\";\nimport { matter } from \"@/app/utils/mdxFiles\";\nconst extractAllSectionIds = (nodes: Node[]): string[] => {\n  let ids: string[] = [];\n  nodes.forEach((node: Node) => {\n    ids.push(node.id);\n    if (node.children && node.children.length > 0) {\n      ids = ids.concat(extractAllSectionIds(node.children));\n    }\n  });\n  return ids;\n};\n\nexport default function TableOfContent({\n  content,\n  matter,\n  slug,\n}: {\n  content: Node[];\n  matter: matter;\n  slug: string;\n}) {\n  const allSectionsIds = useMemo(\n    () => extractAllSectionIds(content),\n    [content]\n  );\n  const activeSectionId = useActiveSection(allSectionsIds) as string;\n  // useEffect(() => {\n  //   console.log(matter, slug);\n  // }, [activeSectionId]);\n\n  const toc = createTreeCollection<Node>({\n    nodeToValue: (node) => node.id,\n    nodeToString: (node) => node.name,\n    rootNode: { id: \"ROOT\", name: \"\", children: content },\n  });\n  //el exanpedValue guarda los que estan abierto/expandidos\n  const [expandedValue] = useState<string[]>(allSectionsIds);\n  return (\n    <>\n      <Box\n        alignSelf=\"start\"\n        display={{\n          base: \"none\",\n          sm: \"none\",\n          md: \"none\",\n          lg: \"block\",\n        }}\n        position=\"sticky\"\n        top=\"4rem\"\n        paddingY={2}\n      >\n        <TreeView.Root\n          collection={toc}\n          maxW=\"sm\"\n          selectedValue={[activeSectionId]}\n          expandedValue={expandedValue}\n        >\n          <TreeView.Label>{matter?.title as string}</TreeView.Label>\n          <TreeView.Tree>\n            <TreeView.Node\n              indentGuide={<TreeView.BranchIndentGuide />}\n              render={({ node, nodeState }) =>\n                nodeState.isBranch ? (\n                  <a href={`/Blog/${slug}#${node.id}`}>\n                    <TreeView.BranchControl>\n                      {node.id == activeSectionId.toString() ? (\n                        <FaCircle></FaCircle>\n                      ) : (\n                        <FaRegCircle />\n                      )}\n                      <TreeView.BranchText>{node.name}</TreeView.BranchText>\n                    </TreeView.BranchControl>\n                  </a>\n                ) : (\n                  <TreeView.Item asChild>\n                    <a href={`/Blog/${slug}#${node.id}`}>\n                      {node.id == activeSectionId.toString() ? (\n                        <FaCircle></FaCircle>\n                      ) : (\n                        <FaRegCircle />\n                      )}\n                      <TreeView.ItemText>{node.name}</TreeView.ItemText>\n                    </a>\n                  </TreeView.Item>\n                )\n              }\n            />\n          </TreeView.Tree>\n        </TreeView.Root>\n      </Box>\n    </>\n  );\n}\n"],"names":[],"mappings":";;;;AACA;AAAA;AAAA;AACA;AACA;AACA;;;AAJA;;;;;AAOA,MAAM,uBAAuB,CAAC;IAC5B,IAAI,MAAgB,EAAE;IACtB,MAAM,OAAO,CAAC,CAAC;QACb,IAAI,IAAI,CAAC,KAAK,EAAE;QAChB,IAAI,KAAK,QAAQ,IAAI,KAAK,QAAQ,CAAC,MAAM,GAAG,GAAG;YAC7C,MAAM,IAAI,MAAM,CAAC,qBAAqB,KAAK,QAAQ;QACrD;IACF;IACA,OAAO;AACT;AAEe,SAAS,eAAe,KAQtC;QARsC,EACrC,OAAO,EACP,MAAM,EACN,IAAI,EAKL,GARsC;;IASrC,MAAM,iBAAiB,CAAA,GAAA,6JAAA,CAAA,UAAO,AAAD;kDAC3B,IAAM,qBAAqB;iDAC3B;QAAC;KAAQ;IAEX,MAAM,kBAAkB,CAAA,GAAA,oIAAA,CAAA,UAAgB,AAAD,EAAE;IACzC,oBAAoB;IACpB,+BAA+B;IAC/B,yBAAyB;IAEzB,MAAM,MAAM,CAAA,GAAA,iMAAA,CAAA,uBAAoB,AAAD,EAAQ;QACrC,aAAa,CAAC,OAAS,KAAK,EAAE;QAC9B,cAAc,CAAC,OAAS,KAAK,IAAI;QACjC,UAAU;YAAE,IAAI;YAAQ,MAAM;YAAI,UAAU;QAAQ;IACtD;IACA,yDAAyD;IACzD,MAAM,CAAC,cAAc,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY;IAC3C,qBACE;kBACE,cAAA,6LAAC,qLAAA,CAAA,MAAG;YACF,WAAU;YACV,SAAS;gBACP,MAAM;gBACN,IAAI;gBACJ,IAAI;gBACJ,IAAI;YACN;YACA,UAAS;YACT,KAAI;YACJ,UAAU;sBAEV,cAAA,6LAAC,wOAAA,CAAA,WAAQ,CAAC,IAAI;gBACZ,YAAY;gBACZ,MAAK;gBACL,eAAe;oBAAC;iBAAgB;gBAChC,eAAe;;kCAEf,6LAAC,wOAAA,CAAA,WAAQ,CAAC,KAAK;kCAAE,mBAAA,6BAAA,OAAQ,KAAK;;;;;;kCAC9B,6LAAC,wOAAA,CAAA,WAAQ,CAAC,IAAI;kCACZ,cAAA,6LAAC,wOAAA,CAAA,WAAQ,CAAC,IAAI;4BACZ,2BAAa,6LAAC,wOAAA,CAAA,WAAQ,CAAC,iBAAiB;;;;;4BACxC,QAAQ;oCAAC,EAAE,IAAI,EAAE,SAAS,EAAE;uCAC1B,UAAU,QAAQ,iBAChB,6LAAC;oCAAE,MAAM,AAAC,SAAgB,OAAR,MAAK,KAAW,OAAR,KAAK,EAAE;8CAC/B,cAAA,6LAAC,wOAAA,CAAA,WAAQ,CAAC,aAAa;;4CACpB,KAAK,EAAE,IAAI,gBAAgB,QAAQ,mBAClC,6LAAC,iJAAA,CAAA,WAAQ;;;;uEAET,6LAAC,iJAAA,CAAA,cAAW;;;;;0DAEd,6LAAC,wOAAA,CAAA,WAAQ,CAAC,UAAU;0DAAE,KAAK,IAAI;;;;;;;;;;;;;;;;2DAInC,6LAAC,wOAAA,CAAA,WAAQ,CAAC,IAAI;oCAAC,OAAO;8CACpB,cAAA,6LAAC;wCAAE,MAAM,AAAC,SAAgB,OAAR,MAAK,KAAW,OAAR,KAAK,EAAE;;4CAC9B,KAAK,EAAE,IAAI,gBAAgB,QAAQ,mBAClC,6LAAC,iJAAA,CAAA,WAAQ;;;;uEAET,6LAAC,iJAAA,CAAA,cAAW;;;;;0DAEd,6LAAC,wOAAA,CAAA,WAAQ,CAAC,QAAQ;0DAAE,KAAK,IAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAWnD;GAhFwB;;QAaE,oIAAA,CAAA,UAAgB;;;KAblB","debugId":null}}]
}